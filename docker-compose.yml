version: "3"

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    expose:
      - ${POSTGRES_CONTAINER_PORT}
    environment:
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: Asia/Seoul
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - ping-pong
    tty: true

  nginx:
    depends_on:
      - frontend
    build: nginx
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - ${NGINX_HOST_PORT}:${NGINX_CONTAINER_PORT}
    networks:
      - ping-pong
    environment:
      TZ: Asia/Seoul
    tty: true

  backend:
    depends_on:
      - postgres
    build: backend
    image: backend
    container_name: backend
    restart: always
    expose:
      - ${BACKEND_PORT}
    networks:
      - ping-pong
    env_file:
      - .env
    environment:
      TZ: Asia/Seoul
    tty: true

  frontend:
    depends_on:
      - backend
    build: frontend
    image: frontend
    container_name: frontend
    restart: always
    expose:
      - ${FRONTEND_PORT}
    networks:
      - ping-pong
    env_file:
      - .env
    environment:
      # WDS_SOCKET_PORT: 0
      TZ: Asia/Seoul
    tty: true

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    networks:
      - ping-pong
    volumes:
      - admin:/var/lib/pgadmin
    ports:
      - ${PGADMIN_HOST_PORT}:${PGADMIN_CONTAINER_PORT}
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      TZ: Asia/Seoul

networks:
  ping-pong:
    driver: bridge

volumes:
  data: {}
  admin: {}
