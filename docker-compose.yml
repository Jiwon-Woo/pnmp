version: '3'

services:

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - ${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}
    environment:
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - ping-pong
    tty: true

  nginx:
    depends_on:
      - frontend
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - ${NGINX_HOST_PORT}:${NGINX_CONTAINER_PORT}
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - ping-pong
    env_file:
      - .env
    tty: true

  backend:
    depends_on:
      - postgres
    build: ./backend
    image: backend
    container_name: backend
    restart: always
    expose:
        - ${BACKEND_PORT}
    networks:
      - ping-pong
    working_dir: /backend
    volumes:
      - ./backend:/backend
      - ./tools/backend.sh:/backend.sh
    env_file:
      - .env
    tty: true
  
  frontend:
    depends_on:
      - backend
    build: ./frontend
    image: frontend
    container_name: frontend
    restart: always
    expose:
        - ${FRONTEND_PORT}
    networks:
      - ping-pong
    working_dir: /frontend
    volumes:
      - ./frontend:/frontend
      - ./tools/frontend.sh:/frontend.sh
    env_file:
      - .env
    environment:
      WDS_SOCKET_PORT: 0
    tty: true

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    networks:
     - ping-pong
    volumes:
      - admin:/var/lib/pgadmin
    ports:
     - ${PGADMIN_HOST_PORT}:${PGADMIN_CONTAINER_PORT}
    environment:
     - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
     - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}

networks:
  ping-pong:
    driver: bridge

volumes:
  db: {}
  admin: {}
