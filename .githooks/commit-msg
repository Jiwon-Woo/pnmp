#!/bin/sh
#
# An hook script to check the commit log message.

# Environment variable settings
TERM=xterm-256color
RED='\x1b[31m'
GREEN='\x1b[32m'
YELLOW='\x1b[33m'
BLUE='\x1b[34m'
RESET='\x1b[0m'

COMMIT_MSG_TEMP_FILE="$1"
COMMIT_MSG="$(head -1 "$COMMIT_MSG_TEMP_FILE")"
BRANCH_NAME="$(git symbolic-ref --short HEAD)"

export LC_CTYPE=en_US.UTF-8


# Check the branch name
BRANCH_REGEX="^(feat|hotfix|docs|setup)\/\#([1-9][0-9]+|[1-9])+$"
if [[ "$BRANCH_NAME" =~ $BRANCH_REGEX ]]; then
echo "$BLUE[note] - githooks: the branch name '$BRANCH_NAME' is valid$RESET"
else
echo "$RED[error] - githooks: commit-msg: the branch name '$BRANCH_NAME' is invalid$RESET"
echo \
"Current branch: $BRANCH_NAME
Expected format: $GREEN[ISSUE_TYPE]/#[ISSUE_NUMBER]$RESET
 ┌───────────────────┐
 │  Types of issues  │
 │$YELLOW 1. feat          $RESET │
 │$YELLOW 2. hotfix        $RESET │
 │$YELLOW 3. docs          $RESET │
 │$YELLOW 4. setup         $RESET │
 └───────────────────┘
-> e.g.$GREEN feat/#3$RESET"
exit 1
fi


# Check the commit message
MSG_REGEX="^(feat|fix|refactor|docs|test|chore):( )([A-Za-z0-9._%+-/]| )+( )(\(\#([1-9][0-9]+|[1-9])\))$"
if [[ "$COMMIT_MSG" =~ $MSG_REGEX ]]; then
MATCHED_STRING=${BASH_REMATCH[5]}
ISSUE_NUMBER=${MATCHED_STRING:1:$((${#MATCHED_STRING}-2))}
  if [[ "$ISSUE_NUMBER" = "$(echo $BRANCH_NAME | cut -d/ -f2 )" ]]; then
  echo "$BLUE[note] - githooks: commit-msg: the commit message '$COMMIT_MSG' is valid$RESET"
  else
  echo "$RED[error] - githooks: commit-msg: the issue number in commit message is not equal to the branch issue number$RESET"
  exit 1
  fi
else
echo "$RED[error] - githooks: commit-msg: the commit message '$COMMIT_MSG' is invalid$RESET"
echo \
"Current title of message: $COMMIT_MSG
Expected format: $GREEN[COMMIT_TYPE]: [COMMIT_SUMMARY] (#[ISSUE_NUMBER])$RESET
 ┌────────────────────┐
 │  Types of Commits  │
 │$YELLOW 1. feat           $RESET │
 │$YELLOW 2. fix            $RESET │
 │$YELLOW 3. refactor       $RESET │
 │$YELLOW 4. test           $RESET │
 │$YELLOW 5. docs           $RESET │
 │$YELLOW 6. chore          $RESET │
 └────────────────────┘
-> e.g.$GREEN git commit -m \"feat: implement method A (#3)\"$RESET"
exit 1
fi
