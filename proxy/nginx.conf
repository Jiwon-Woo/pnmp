user				nginx;
worker_processes	auto;
error_log			/var/log/nginx/error.log warn;
pid					/var/run/nginx.pid;

events {
	worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

	# 백엔드 upstream 설정
	upstream web-backend {
		server backend:8000;
	}

	# 프론트엔드 upstream 설정
	upstream web-frontend {
		server frontend:3000; # docker를 사용하지 않는다면 localhost:3000(웹서버주소)
	}

	server {
		listen 80;

		# /api 경로로 오는 요청을 백엔드 upstream 의 /api 경로로 포워딩
		location /api {
			rewrite /api/?(.*) /$1 break; # 외부 요청 URI에서 /api 제거
			proxy_pass         http://web-backend;
		}

		# / 경로로 오는 요청을 프론트엔드 upstream 의 / 경로로 포워딩
		location / {
			proxy_pass         http://web-frontend/;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
		}
	}

	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
						'$status $body_bytes_sent "$http_referer" '
						'"$http_user_agent" "$http_x_forwarded_for"';
	
	access_log  /var/log/nginx/access.log  main;

	sendfile			on;
	keepalive_timeout	65;
	# include /etc/nginx/conf.d/*.conf;
}